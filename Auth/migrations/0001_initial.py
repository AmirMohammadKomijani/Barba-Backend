# Generated by Django 4.1.7 on 2023-03-25 10:19

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                ("phone_Number", models.CharField(max_length=11, unique=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("region", models.CharField(max_length=255)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")], max_length=6
                    ),
                ),
                ("password", models.CharField(max_length=255, unique=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        related_name="customer_groups", to="auth.group"
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        related_name="customer_user_permissions", to="auth.permission"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Barber",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("BarberShop", models.CharField(max_length=255)),
                ("Owner", models.CharField(max_length=255)),
                ("Parvaneh", models.CharField(max_length=10, unique=True)),
                ("phone_Number", models.CharField(max_length=11, unique=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("region", models.CharField(max_length=255)),
                ("address", models.CharField(max_length=255)),
                ("password", models.CharField(max_length=255, unique=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        related_name="barber_groups", to="auth.group"
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        related_name="barber_user_permissions", to="auth.permission"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
